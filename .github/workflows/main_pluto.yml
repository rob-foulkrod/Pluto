# Deploys a dontet app to a staging slot, then to a production slot
# Create a Service Principal and add Federated credentials for staging env and production env
# then create the folowwing secrets
#  - AZURE_CLIENT_ID 2b37589d-070c-4ac3-8535-82e5a489a818
#  - AZURE_TENANT_ID 535e8246-b18f-4802-9b11-babf6a477647
#  - AZURE_SUBSCRIPTION_ID a9b53f77-8255-4f60-8faf-47f914aa80f7
# Finally, update then APP_NAME and RESOURCE_GROUP variables

name: Build and deploy ASP.Net Core app to Azure Web App - helpIneedsomebody

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
env:
  APP_NAME: pluto
  RESOURCE_GROUP: pluto

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.APP_NAME}}
          slot-name: 'staging'
          package: .

  release:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      id-token: write
      contents: read
    environment:
      name: 'production'
      url: ${{ steps.swap-to-prod.outputs.webapp-url }}

    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: swap web app to production
        id: swap-to-prod
        run: |
          az webapp deployment slot swap -g ${{env.RESOURCE_GROUP}} -n ${{env.APP_NAME}} --slot staging --target-slot production
          echo "webapp-url=https://$(az webapp show --name ${{env.APP_NAME}} -g ${{env.RESOURCE_GROUP}} --query defaultHostName --output tsv)" >> $GITHUB_OUTPUT







	
